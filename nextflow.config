params {
    // Sample preparation options
    primers = 'data/primers/Primers_A_elife-11282-supp2-v2_PCR1_primers_A_primers_RC.fasta'
    adapters = 'data/adapters/adapters.fasta'
    initdir = 'data/initdirs/InitDirShiver190405_BQ30/'
    config = 'data/configs/shiver_config_BQ30_notrimming.sh'

    // Parameters for estimating time of infection
    coverage_threshold_eti = '300'

    // Output options
    tracedir = "${params.outdir}/pipeline_info"
    cache = "${params.outdir}/cache"

    // General options
    help = false
}

profiles {
    local {
        process.executor = 'local'
        cpus = 1
    }
    slurm {
        process.executor = 'slurm'

        // Set general configurations for jobs
        process.clusterOptions = { "-A development --qos low }

        // Set cpu, memory and time limit
        if ( params.large ) {
            withLabel: trimming {
                cpus = 6
                memory = '20 GB'
                time = '1h'
            }
            withLabel: hostDepletion {
                cpus = 6
                memory = '20 GB'
                time = '1h'
            }
            withLabel: hostStats {
                cpus = 1
                memory = '10 GB'
                time = '15m'
            }
            withLabel: assembly {
                cpus = 6
                memory = '20 GB'
                time = '3h'
            }
            withLabel: shiver {
                cpus = 1
                memory = '10 GB'
                time = '1h'
            }
        }
        else {
            withLabel: trimming {
                cpus = 6
                memory = '10 GB'
                time = '30m'
            }
            withLabel: hostDepletion {
                cpus = 6
                memory = '10 GB'
                time = '30m'
            }
            withLabel: hostStats {
                cpus = 1
                memory = '10 GB'
                time = '15m'
            }
            withLabel: assembly {
                cpus = 6
                memory = '10 GB'
                time = '2h'
            }
            withLabel: shiver {
                cpus = 1
                memory = '10 GB'
                time = '1h'
            }
        }
    }
    docker {
        docker.enabled = true
        fixOwnership = true
        runOptions = "-u \$(id -u):\$(id -g)"
        process.container = "hiv_time_analysis:latest"
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        process.container = "talnor/hiv_time_analysis:latest"
        // Temporary directories
        if (params.cache) {
            singularity.cacheDir = params.cache
            env.NXF_TEMP="${params.cache}"
            env.NXF_SINGULARITY_LOCALCACHEDIR="${params.cache}"
            env.NXF_SINGULARITY_CACHEDIR="${params.cache}"
            env.NXF_SINGULARITY_TMPDIR="${params.cache}"
            env.SINGULARITY_LOCALCACHEDIR="${params.cache}"
            env.SINGULARITY_CACHEDIR="${params.cache}"
            env.SINGULARITY_TMPDIR="${params.cache}"
            env.SINGULARITY_ROOTFS="${params.cache}"
            env.TMPDIR="${params.cache}"
            env.TEMPDIR="${params.cache}"
        }
    }
}

// Nextflow output files
process.shell = ['/bin/bash', '-euo', 'pipefail']
timeline {
    enabled = true
    file = "${params.tracedir}/execution_timeline.html"
}
report {
    enabled = true
    file = "${params.tracedir}/execution_report.html"
}
trace {
    enabled = true
    file = "${params.tracedir}/execution_trace.txt"
}
dag {
    enabled = true
    file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
  description = 'Analysis pipeline for estimation of time of infection of HIV samples in the TIME study'
  mainScript = 'main.nf'
  version = '0.1.0'
}